// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid())
  username          String   @unique
  shadowId          String   @unique
  status            String?
  weeklyPoints      Int      @default(0)
  airdropPoints     Int      @default(0)
  claimedMissions   String[] @default([])
  claimedSpecialOps String[] @default([])

  // Airdrop registration fields
  wallet_address  String?
  wallet_type     String?
  email           String? @unique
  phone           String?
  x_handle        String?
  telegram_handle String?
  youtube_handle  String?

  positions  Position[]
  userAgents UserAgent[]
  badges     Badge[]     @relation("UserBadges")
}

model Position {
  id                  String         @id @default(uuid())
  userId              String
  user                User           @relation(fields: [userId], references: [id])
  symbol              String
  signalType          SignalType
  status              PositionStatus @default(OPEN)
  openTimestamp       DateTime?
  closeTimestamp      DateTime?
  expirationTimestamp DateTime?
  entryPrice          Float
  closePrice          Float?
  size                Float          @default(1)
  stopLoss            Float
  takeProfit          Float
  pnl                 Float?
  strategyId          String?
}

model Badge {
  id    String @id @default(uuid())
  name  String @unique
  users User[] @relation("UserBadges")
}

model UserAgent {
  id                String    @id @default(uuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id])
  agentId           String
  level             Int       @default(1)
  status            String // e.g., 'IDLE', 'DEPLOYED'
  deploymentEndTime DateTime?
}

enum SignalType {
  BUY
  SELL
}

enum PositionStatus {
  PENDING
  OPEN
  CLOSED
}

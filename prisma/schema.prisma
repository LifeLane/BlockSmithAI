generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String      @id @default(uuid())
  username          String
  shadowId          String      @unique
  status            String
  weeklyPoints      Int         @default(0)
  airdropPoints     Int         @default(0)
  wallet_address    String?
  wallet_type       String?
  email             String?
  phone             String?
  x_handle          String?
  telegram_handle   String?
  youtube_handle    String?
  claimedMissions   String[]    @default([])
  claimedSpecialOps String[]    @default([])
  badges            Badge[]
  positions         Position[]
  userAgents        UserAgent[]
}

model Badge {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  icon        String?
  users       User[]
}

model Position {
  id                  String         @id @default(uuid())
  userId              String
  user                User           @relation(fields: [userId], references: [id])
  symbol              String
  signalType          SignalType
  status              PositionStatus
  openTimestamp       DateTime?      @default(now())
  closeTimestamp      DateTime?
  entryPrice          Float
  closePrice          Float?
  size                Float
  stopLoss            Float
  takeProfit          Float
  pnl                 Float?
  strategyId          String?
  expirationTimestamp DateTime?
}

model UserAgent {
  id                String    @id @default(uuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id])
  agentId           String
  level             Int       @default(1)
  status            String // "IDLE", "DEPLOYED"
  deploymentEndTime DateTime?

  @@unique([userId, agentId])
}

enum SignalType {
  BUY
  SELL
}

enum PositionStatus {
  OPEN
  CLOSED
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String      @id @default(uuid())
  username          String      @unique
  shadowId          String      @unique
  status            String
  weeklyPoints      Int         @default(0)
  airdropPoints     Int         @default(0)
  wallet_address    String?
  wallet_type       String?
  email             String?
  phone             String?
  x_handle          String?
  telegram_handle   String?
  youtube_handle    String?
  claimedMissions   String[]    @default([])
  claimedSpecialOps String[]    @default([])
  positions         Position[]
  userAgents        UserAgent[]
  badges            Badge[]     @relation("UserBadges")
}

model Badge {
  id    String @id @default(uuid())
  name  String
  users User[] @relation("UserBadges")
}

model Position {
  id                  String         @id @default(uuid())
  user                User           @relation(fields: [userId], references: [id])
  userId              String
  symbol              String
  signalType          SignalType
  status              PositionStatus
  openTimestamp       DateTime?
  closeTimestamp      DateTime?
  expirationTimestamp DateTime?
  entryPrice          Float
  closePrice          Float?
  size                Float
  stopLoss            Float
  takeProfit          Float
  pnl                 Float?
  strategyId          String?
}

model UserAgent {
  id                String    @id @default(uuid())
  user              User      @relation(fields: [userId], references: [id])
  userId            String
  agentId           String
  level             Int
  status            String // "IDLE" or "DEPLOYED"
  deploymentEndTime DateTime?
}

enum SignalType {
  BUY
  SELL
}

enum PositionStatus {
  OPEN
  CLOSED
}

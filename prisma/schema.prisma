generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @default(cuid())
  username           String      @unique
  shadowId           String      @unique
  status             String?     @default("Guest")
  weeklyPoints       Int         @default(0)
  airdropPoints      Int         @default(0)
  claimedMissions    String[]
  claimedSpecialOps  String[]
  wallet_address     String?
  wallet_type        String?
  email              String?     @unique
  phone              String?
  x_handle           String?
  telegram_handle    String?
  youtube_handle     String?
  positions          Position[]
  userAgents         UserAgent[]
  badges             Badge[]     @relation("UserBadges")
}

model Badge {
  id    String @id @default(cuid())
  name  String @unique
  users User[] @relation("UserBadges")
}

model Position {
  id                  String         @id @default(cuid())
  userId              String
  symbol              String
  signalType          SignalType
  status              PositionStatus @default(OPEN)
  entryPrice          Float
  size                Float          @default(1)
  stopLoss            Float?
  takeProfit          Float?
  closePrice          Float?
  pnl                 Float?
  openTimestamp       DateTime?      @db.Timestamp(6)
  closeTimestamp      DateTime?      @db.Timestamp(6)
  expirationTimestamp DateTime?      @db.Timestamp(6)
  strategyId          String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model UserAgent {
  id                String          @id @default(cuid())
  userId            String
  agentId           String
  level             Int             @default(1)
  status            UserAgentStatus @default(IDLE)
  deploymentEndTime DateTime?       @db.Timestamp(6)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, agentId])
}

enum SignalType {
  BUY
  SELL
  HOLD
}

enum PositionStatus {
  PENDING
  OPEN
  CLOSED
}

enum UserAgentStatus {
  IDLE
  DEPLOYED
}

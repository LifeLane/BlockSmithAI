
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  String        @id @default(uuid())
  username            String
  shadowId            String        @unique
  status              String        @default("Guest")
  weeklyPoints        Int           @default(0)
  airdropPoints       Int           @default(0)
  claimedMissions     String[]
  claimedSpecialOps   String[]
  wallet_address      String?
  wallet_type         String?
  email               String?       @unique
  phone               String?
  x_handle            String?
  telegram_handle     String?
  youtube_handle      String?
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  
  positions           Position[]
  userAgents          UserAgent[]
  badges              Badge[]       @relation("UserBadges")
}

model Badge {
  id    String @id @default(uuid())
  name  String @unique
  users User[] @relation("UserBadges")
}

model Position {
  id                  String          @id @default(uuid())
  symbol              String
  signalType          SignalType
  entryPrice          Float
  size                Float           @default(1)
  status              PositionStatus
  openTimestamp       DateTime        @default(now())
  expirationTimestamp DateTime?
  
  closePrice          Float?
  closeTimestamp      DateTime?
  pnl                 Float?

  stopLoss            Float?
  takeProfit          Float?

  userId              String
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model UserAgent {
  id                String      @id @default(uuid())
  agentId           String
  level             Int         @default(1)
  status            AgentStatus @default(IDLE)
  deploymentEndTime DateTime?

  userId            String
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, agentId])
  @@index([userId])
}

enum SignalType {
  BUY
  SELL
  HOLD
}

enum PositionStatus {
  OPEN
  CLOSED
  PENDING 
}

enum AgentStatus {
  IDLE
  DEPLOYED
}

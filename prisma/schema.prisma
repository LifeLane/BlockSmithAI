// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String   @id @default(cuid())
  username          String
  shadowId          String   @unique
  status            String   @default("Guest")
  weeklyPoints      Int      @default(0)
  airdropPoints     Int      @default(0)
  claimedMissions   String[]
  badges            Json[]   @default("[]")
  email             String?
  phone             String?
  x_handle          String?
  telegram_handle   String?
  youtube_handle    String?
  wallet_type       String?
  wallet_address    String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  positions         Position[]
  generatedSignals  GeneratedSignal[]
}

enum SignalType {
  BUY
  SELL
}

enum PositionStatus {
  PENDING
  OPEN
  CLOSED
}

enum PositionType {
  INSTANT
  CUSTOM
}

model Position {
  id                   String         @id @default(cuid())
  userId               String
  user                 User           @relation(fields: [userId], references: [id])
  symbol               String
  signalType           SignalType
  entryPrice           Float
  size                 Float          @default(1)
  status               PositionStatus @default("PENDING")
  openTimestamp        DateTime?
  closeTimestamp       DateTime?
  closePrice           Float?
  expirationTimestamp  DateTime?
  stopLoss             Float?
  takeProfit           Float?
  pnl                  Float?
  gainedXp             Int?
  gainedAirdropPoints  Int?
  gasPaid              Float?
  blocksTrained        Int?
  strategyId           String?
  type                 PositionType
  tradingMode          String
  riskProfile          String
  gpt_confidence_score String?
  sentiment            String?
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
}

enum SignalStatus {
  PENDING_EXECUTION
  EXECUTED
  DISMISSED
  ARCHIVED
  ERROR
}

model GeneratedSignal {
  id                   String       @id @default(cuid())
  userId               String
  user                 User         @relation(fields: [userId], references: [id])
  symbol               String
  signal               String
  entry_zone           String
  stop_loss            String
  take_profit          String
  confidence           String
  risk_rating          String
  gpt_confidence_score String
  sentiment            String
  currentThought       String
  shortTermPrediction  String
  sentimentTransition  String?
  chosenTradingMode    String?
  chosenRiskProfile    String?
  strategyReasoning    String?
  analysisSummary      String?
  newsAnalysis         String?
  disclaimer           String
  type                 String
  status               SignalStatus @default(PENDING_EXECUTION)
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
}

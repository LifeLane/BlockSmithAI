// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(cuid())
  username            String
  shadowId            String    @unique
  status              String    @default("Guest") // e.g., "Guest", "Registered", "Active Analyst"
  weeklyPoints        Int       @default(0)
  airdropPoints       Int       @default(0)
  
  // Airdrop Registration Info
  wallet_address      String?
  wallet_type         String?
  email               String?   @unique
  phone               String?
  x_handle            String?
  telegram_handle     String?
  youtube_handle      String?
  
  // Relations
  positions           Position[]
  badges              Badge[]    @relation("UserBadges")
  agents              UserAgent[]
  
  // Mission Tracking
  claimedMissions     String[]
  claimedSpecialOps   String[]  @default([])

  @@index([weeklyPoints])
}


model Badge {
  id      String @id @default(cuid())
  name    String @unique
  users   User[] @relation("UserBadges")
}

model Position {
  id                  String        @id @default(cuid())
  userId              String
  user                User          @relation(fields: [userId], references: [id])
  symbol              String
  signalType          SignalType
  entryPrice          Float
  size                Float
  status              PositionStatus @default(PENDING)
  openTimestamp       DateTime?     @db.Timestamp(3)
  closeTimestamp      DateTime?     @db.Timestamp(3)
  pnl                 Float?
  stopLoss            Float?
  takeProfit          Float?
  strategyId          String?
  expirationTimestamp DateTime?     @db.Timestamp(3)
}

model UserAgent {
  id                String    @id @default(cuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id])
  agentId           String
  level             Int       @default(1)
  status            String    @default("IDLE") // "IDLE" | "DEPLOYED"
  deploymentEndTime DateTime? @db.Timestamp(3)

  @@unique([userId, agentId])
}


enum SignalType {
  BUY
  SELL
  HOLD
}

enum PositionStatus {
  PENDING
  OPEN
  CLOSED
}

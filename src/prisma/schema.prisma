// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String   @id @default(uuid())
  shadowId        String   @unique
  username        String
  email           String?  @unique
  phone           String?
  wallet_address  String?
  wallet_type     String?
  x_handle        String?
  telegram_handle String?
  youtube_handle  String?
  weeklyPoints    Int      @default(0)
  airdropPoints   Float    @default(0)
  status          String
  claimedMissions String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  badges           Badge[]
  generatedSignals GeneratedSignal[]
  positions        Position[]
}

model Badge {
  id          String   @id @default(uuid())
  name        String
  description String
  icon        String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime @default(now())
}

model GeneratedSignal {
  id                   String   @id @default(uuid())
  userId               String
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  symbol               String
  signal               SignalType
  status               GeneratedSignalStatus
  entry_zone           String
  stop_loss            String
  take_profit          String
  confidence           String
  gpt_confidence_score String
  risk_rating          String
  sentiment            String
  currentThought       String
  shortTermPrediction  String
  chosenTradingMode    String
  chosenRiskProfile    String
  strategyReasoning    String
  analysisSummary      String
  newsAnalysis         String?
  createdAt            DateTime @default(now())
  position             Position?
}

model Position {
  id                  String       @id @default(uuid())
  userId              String
  user                User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  strategyId          String?      @unique
  signal              GeneratedSignal? @relation(fields: [strategyId], references: [id])
  symbol              String
  signalType          SignalType
  status              PositionStatus
  type                PositionType
  entryPrice          Float
  stopLoss            Float?
  takeProfit          Float?
  closePrice          Float?
  pnl                 Float?
  size                Float        @default(1.0)
  createdAt           DateTime     @default(now())
  openTimestamp       DateTime?
  closeTimestamp      DateTime?
  tradingMode         String
  riskProfile         String
  sentiment           String
  gpt_confidence_score String
  analysisSummary     String
  newsAnalysis        String?
  strategyReasoning   String // This was the missing field
  gainedXp            Int?
  gainedAirdropPoints Float?
  gasPaid             Float?
  blocksTrained       Int?
}

enum SignalType {
  BUY
  SELL
}

enum PositionStatus {
  PENDING
  OPEN
  CLOSED
}

enum PositionType {
  INSTANT
  CUSTOM
}

enum GeneratedSignalStatus {
  PENDING_EXECUTION
  EXECUTED
  DISMISSED
}
